{"version":3,"sources":["picture/billie.jpg","picture/logo.png","picture/tenor.gif","picture/1.gif","picture/2.gif","picture/3.gif","picture/4.gif","picture/5.gif","redux/initialState/initialState.js","redux/reducer/reducer.js","redux/actions/actions.js","component/song.js","component/Songs_bar.js","component/musick_bar.js","component/input.js","component/wrapper.js","redux/actions_creators/action_creatore.js","component/Header.js","App.js","serviceWorker.js","component/About.js","index.js"],"names":["module","exports","currentSong","songs","reduser","state","initialState","action","type","content","filtred","filter","elem","concat","Song","song","width","height","src","frameBorder","allow","allowFullScreen","connect","className","map","i","key","MusickBar","Input","useState","url","setUrl","value","onChange","e","target","onClick","preventDefault","fetch","method","body","JSON","stringify","headers","mapDispatchToProps","allSong","useEffect","then","responce","json","console","log","alt","Background","Header","window","location","href","toString","logo","undefined","to","App","Boolean","hostname","match","About","gif","gif1","gif2","gif3","gif4","gif5","store","createStore","reducer","ReactDOM","render","StrictMode","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.28a64f1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/billie.8ffd72d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.dcf0e6e1.png\";","module.exports = __webpack_public_path__ + \"static/media/tenor.9a1ccab0.gif\";","module.exports = __webpack_public_path__ + \"static/media/1.cb28ec39.gif\";","module.exports = __webpack_public_path__ + \"static/media/2.ea1e8a59.gif\";","module.exports = __webpack_public_path__ + \"static/media/3.4b26cecd.gif\";","module.exports = __webpack_public_path__ + \"static/media/4.aa340980.gif\";","module.exports = __webpack_public_path__ + \"static/media/5.588f3928.gif\";","export default {\r\n    currentSong:{},\r\n    songs:[\r\n        \"https://www.youtube.com/embed/L7ZyprYXqPk\",       \r\n        \"https://www.youtube.com/embed/JnIhhif0f6Y\",\r\n        \"https://www.youtube.com/embed/EqvrhEH7WgY\",\r\n        \"https://www.youtube.com/embed/41E8Z1Nr7Ps\",\r\n        \"https://www.youtube.com/embed/mk-ZEgbvvfw\",\r\n    ]\r\n}","import {ALL_SONG, CURENT_SONG} from \"../actions/actions\";\r\nimport initialState from \"../initialState/initialState\"\r\n\r\nfunction reduser(state = initialState,action){\r\n    switch (action.type) {\r\n        case CURENT_SONG: return {...state,currentSong:action.content};\r\n        case ALL_SONG:{ \r\n            const filtred = action.content.filter(elem=>elem!=null)\r\n            return {...state,songs:state.songs.concat(filtred)}\r\n        }\r\n        default:return state\r\n    }\r\n}\r\n\r\nexport default reduser","export const CURENT_SONG = \"CURENT_SONG\";\r\nexport const ALL_SONG = \"ALL_SONG\";","import React from \"react\";\r\n\r\n\r\nfunction Song({song}){\r\n    return (\r\n    <div>\r\n       <iframe width=\"560\" height=\"315\" src={song} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Song","import React from \"react\";\r\nimport Song from \"./song\";\r\nimport {connect} from \"react-redux\"\r\n\r\nfunction SongsBar({songs}){    \r\n    return (\r\n        <div className=\"songs-bar\">\r\n            {songs?songs.map((elem,i)=>{\r\n                return (<Song key={i} song={elem}></Song>)\r\n            }):null}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return {songs:state.songs}\r\n}\r\nexport default connect(mapStateToProps)(SongsBar) ","import React from \"react\";\r\n\r\n\r\nfunction MusickBar(){\r\n    return (\r\n        <div className=\"musick-bar\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusickBar","import React, { useState } from \"react\";\r\n\r\nfunction Input(){\r\n    const [url,setUrl] = useState(\"\")\r\n    function submit(e){\r\n        e.preventDefault();\r\n        fetch(\"http://localhost:4000/new-video\",{\r\n            method:\"POST\",\r\n            body:JSON.stringify({url:url}),\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            }\r\n        })\r\n    }\r\n    return (\r\n    <div className=\"input\">\r\n        <form>\r\n            <p>Загрузить видео?</p>\r\n            <input type=\"text\" value={url} onChange={(e)=>{setUrl(e.target.value)}}></input>\r\n            <button onClick={submit}> Отправить</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React, { useEffect } from \"react\";\r\nimport SongsBar from './Songs_bar';\r\nimport MusickBar from './musick_bar';\r\nimport Background from \"../picture/billie.jpg\"\r\nimport {allSong} from \"../redux/actions_creators/action_creatore\"\r\nimport { connect } from \"react-redux\";\r\nimport Input from \"./input\";\r\n\r\nfunction Wrapper({allSong}){\r\n    useEffect(()=>{\r\n        fetch(\"http://localhost:4000/get-video\")\r\n        .then(responce=>responce.json())\r\n        .then(responce=>{\r\n            console.log(responce);\r\n            if(responce[0])allSong(responce)\r\n        })\r\n    })\r\n    return (  \r\n        <div className=\"wrapper\">\r\n            <div className=\"background\">\r\n                <img className=\"backgtound-picture\" alt=\"Background\" src={Background}></img>\r\n                <div className=\"wrapper-block\"></div>            \r\n            </div>\r\n            <SongsBar></SongsBar>\r\n            <MusickBar></MusickBar>\r\n            <Input></Input>\r\n        </div>      \r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    allSong\r\n}\r\nexport default connect(null,mapDispatchToProps)(Wrapper) ","import { CURENT_SONG , ALL_SONG} from \"../actions/actions\"\r\n\r\nexport const newCurentSong = function(content){\r\n    return {\r\n        type:CURENT_SONG,\r\n        content:content\r\n    }\r\n}\r\nexport const allSong = function(content){\r\n    return {\r\n        type:ALL_SONG,\r\n        content:content\r\n    }\r\n}","import React from \"react\";\r\nimport logo from \"../picture/logo.png\"\r\nimport {Link, Route} from \"react-router-dom\"\r\n\r\nfunction Header(){\r\n    const url = window.location.href.toString()      \r\n    console.log(url[22]);  \r\n    return (\r\n        <header>\r\n            <div className=\"logo-bar\">\r\n                <img className=\"logo\" alt=\"logo\" src={logo}></img>\r\n                <p className=\"logo-text\">♀<strong>Gay</strong>♂  Website</p>\r\n            </div>\r\n            <div className=\"navigations\">\r\n                {url[22] === undefined?<Link to=\"/about\"><p className=\"navigations-text\">Что такое гачи?</p></Link>:<Link to=\"/\"><p className=\"navigations-text\">Home</p></Link>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport Wrapper from \"./component/wrapper\"\nimport Header from './component/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">      \n      <Header></Header>      \n      <Wrapper></Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport gif from \"../picture/tenor.gif\";\r\nimport gif1 from \"../picture/1.gif\";\r\nimport gif2 from \"../picture/2.gif\";\r\nimport gif3 from \"../picture/3.gif\";\r\nimport gif4 from \"../picture/4.gif\";\r\nimport gif5 from \"../picture/5.gif\";\r\n\r\nfunction About(){\r\n    return (\r\n        <div className=\"about-page\">\r\n            <Header></Header>\r\n            <div className=\"about-wrapper\">\r\n                <div className=\"about-text\">\r\n                    <h1>Gachi это не просто GAY SEX...</h1>\r\n                    <p>Гачи библий жизни и настоящей мужской дружбы.</p>\r\n                </div>\r\n                <div className=\"about-gif\">\r\n                    <img className=\"gif\" src={gif} alt=\"Gif\"></img>\r\n                    <img className=\"gif\" src={gif1} alt=\"Gif\"></img>\r\n                    <img className=\"gif\" src={gif2} alt=\"Gif\"></img>\r\n                    <img className=\"gif\" src={gif3} alt=\"Gif\"></img>\r\n                    <img className=\"gif\" src={gif4} alt=\"Gif\"></img>\r\n                    <img className=\"gif\" src={gif5} alt=\"Gif\"></img>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport reducer from \"./redux/reducer/reducer\"\nimport {createStore} from \"redux\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport About from './component/About';\n \nconst store = createStore(reducer)\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={App}></Route>\n          <Route path=\"/about\" component={About}></Route>\n        </Switch>\n        </BrowserRouter> \n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}